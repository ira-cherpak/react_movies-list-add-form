{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","imgUrlError","imdbUrlError","handleChange","target","name","value","setState","handleSubmit","event","preventDefault","onAdd","props","urlValidation","test","this","action","method","onSubmit","htmlFor","type","id","onChange","required","placeholder","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1801661.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlError: false,\n    imdbUrlError: false,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const { onAdd } = this.props;\n\n    this.setState({\n      imgUrlError: false,\n      imdbUrlError: false,\n    });\n\n    // eslint-disable-next-line\n    const urlValidation = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!imgUrl || !urlValidation.test(imgUrl)) {\n      this.setState({ imgUrlError: true });\n\n      return;\n    }\n\n    if (!imdbUrl || !urlValidation.test(imdbUrl)) {\n      this.setState({ imdbUrlError: true });\n\n      return;\n    }\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl,\n      imdbUrl, imdbId, imgUrlError, imdbUrlError } = this.state;\n\n    return (\n      <form\n        action=\"/movies.js\"\n        method=\"POST\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor=\"title\">\n          Title\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          Description\n          <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"imgUrl\">\n          imgUrl\n          <input\n            type=\"text\"\n            id=\"imgUrl\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            placeholder=\"hhtps://\"\n            onChange={this.handleChange}\n            required\n          />\n          {imgUrlError && <p className=\"error-text\">Invalid value</p>}\n        </label>\n\n        <label htmlFor=\"imdbUrl\">\n          imdbUrl\n          <input\n            type=\"text\"\n            id=\"imdbUrl\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            placeholder=\"hhtps://\"\n            onChange={this.handleChange}\n            required\n          />\n          {imdbUrlError && <p className=\"error-text\">Invalid value</p>}\n        </label>\n\n        <label htmlFor=\"imdbId\">\n          imdbId\n          <input\n            type=\"text\"\n            id=\"imdbId\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n\n        <button\n          className=\"button\"\n          type=\"submit\"\n          disabled={this.state.imgUrlError || this.state.imdbUrlError}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}